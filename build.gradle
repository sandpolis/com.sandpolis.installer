//============================================================================//
//                                                                            //
//                Copyright Â© 2015 - 2020 Subterranean Security               //
//                                                                            //
//  This source file is subject to the terms of the Mozilla Public License    //
//  version 2. You may not use this file except in compliance with the MPL    //
//  as published by the Mozilla Foundation at:                                //
//                                                                            //
//    https://mozilla.org/MPL/2.0                                             //
//                                                                            //
//=========================================================S A N D P O L I S==//

plugins {
	id "eclipse"
	id "java-library"

	id "org.openjfx.javafxplugin" version "0.0.9"
	id "com.github.breadmoirai.github-release" version "2.2.9"
}

javafx {
	modules = [ "javafx.controls", "javafx.fxml", "javafx.graphics" ]
	configuration = "compileOnly"
	version = "15"
}

eclipse {
	project {
		name = "com.sandpolis.installer"
		comment = "The installer instance"
	}
}

configurations {
	internal
	installTargets
	windows
	linux
	mac

	windows.extendsFrom(runtimeClasspath)
	linux.extendsFrom(runtimeClasspath)
	mac.extendsFrom(runtimeClasspath)
}

dependencies {
	testImplementation("org.junit.jupiter:junit-jupiter-api:5.6.1")
	testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.6.1")

	implementation project(":module:com.sandpolis.core.foundation")

	// https://github.com/cilki/CompactClassLoader
	internal "com.github.cilki:compact-classloader:1.3.1"

	// https://github.com/qos-ch/logback
	implementation("ch.qos.logback:logback-core:1.3.0-alpha5")
	implementation("ch.qos.logback:logback-classic:1.3.0-alpha5")

	// https://github.com/nayuki/QR-Code-generator
	implementation("io.nayuki:qrcodegen:1.6.0")

	// https://github.com/DmitriiShamrikov/mslinks
	compileOnly ("com.github.vatbub:mslinks:1.0.5") {
		exclude group: "org.jetbrains", module: "annotations"
	}
	windows ("com.github.vatbub:mslinks:1.0.5") {
		exclude group: "org.jetbrains", module: "annotations"
	}

	// Installation targets
	installTargets project(":com.sandpolis.server.vanilla")
	installTargets project(":com.sandpolis.client.lifegem")
	installTargets project(":com.sandpolis.client.ascetic")
	installTargets project(":com.sandpolis.agent.vanilla")

	// JavaFX runtimes
	windows "org.openjfx:javafx-base:15.0.1:win"
	windows "org.openjfx:javafx-fxml:15.0.1:win"
	windows "org.openjfx:javafx-graphics:15.0.1:win"
	windows "org.openjfx:javafx-controls:15.0.1:win"

	linux "org.openjfx:javafx-base:15.0.1:linux"
	linux "org.openjfx:javafx-fxml:15.0.1:linux"
	linux "org.openjfx:javafx-graphics:15.0.1:linux"
	linux "org.openjfx:javafx-controls:15.0.1:linux"

	mac "org.openjfx:javafx-base:15.0.1:mac"
	mac "org.openjfx:javafx-fxml:15.0.1:mac"
	mac "org.openjfx:javafx-graphics:15.0.1:mac"
	mac "org.openjfx:javafx-controls:15.0.1:mac"
}

jar {
	from configurations.internal.collect {zipTree(it)}
}

task jarOnlineWin(type: Jar, dependsOn: jar) {
	archiveBaseName = "SandpolisInstaller-win"
	manifest {
		attributes(
			"Main-Class": "com.github.cilki.compact.BootProxy",
			"Boot-Class": "com.sandpolis.installer.Main",
			"Compact-Class-Path": configurations.windows
				.collect { it.getName() }
				.join(" "),
			"SplashScreen-Image": "image/logo.png"
		)
	}

	from zipTree(jar.archiveFile)
	from configurations.windows
}

task jarOnlineLin(type: Jar, dependsOn: jar) {
	archiveBaseName = "SandpolisInstaller-linux"
	manifest {
		attributes(
			"Main-Class": "com.github.cilki.compact.BootProxy",
			"Boot-Class": "com.sandpolis.installer.Main",
			"Compact-Class-Path": configurations.linux
				.collect { it.getName() }
				.join(" "),
			"SplashScreen-Image": "image/logo.png"
		)
	}

	from zipTree(jar.archiveFile)
	from configurations.linux
}

task jarOnlineMac(type: Jar, dependsOn: jar) {
	archiveBaseName = "SandpolisInstaller-mac"
	manifest {
		attributes(
			"Main-Class": "com.github.cilki.compact.BootProxy",
			"Boot-Class": "com.sandpolis.installer.Main",
			"Compact-Class-Path": configurations.mac
				.collect { it.getName() }
				.join(" "),
			"SplashScreen-Image": "image/logo.png"
		)
	}

	from zipTree(jar.archiveFile)
	from configurations.mac
}

artifacts {
	archives jarOnlineWin
	archives jarOnlineLin
	archives jarOnlineMac
}

githubRelease {
	token = System.properties["publishing.github.token"]
	owner = "sandpolis"
	repo = "sandpolis"
	draft = true
	prerelease = true
	releaseAssets = {[
		jarOnlineWin.archiveFile,
		jarOnlineLin.archiveFile,
		jarOnlineMac.archiveFile,
	]}
}
tasks.githubRelease.dependsOn(assemble)
